#:schema https://raw.githubusercontent.com/YunoHost/apps/master/schemas/manifest.v2.schema.json

packaging_format = 2

id = "anki"
name = "Anki sync server"
description.en = "This is the official open source Anki synchronisation server"
description.fr = "Le serveur de synchronisation Anki officiel et open source"

version = "1.0~ynh1"

maintainers = ["ob1an"]

[upstream]
# NB: Only the "license" key is mandatory. Remove entries for which there's no relevant data
license = "AGPL-3.0-or-later"
website = "https://apps.ankiweb.net/"
admindoc = "https://docs.ankiweb.net/sync-server.html"
userdoc = "https://docs.ankiweb.net/sync-server.html"
code = "https://github.com/ankitects/anki"


[integration]
yunohost = ">= 11.1.21"
architectures = "all"
multi_instance = true

# FIXME: replace with true, false, or "not_relevant".
# Not to confuse with the "sso" key: the "ldap" key corresponds to wether or not a user *can* login on the app using
# its YunoHost credentials.
ldap = "false"

# FIXME: replace with true, false, or "not_relevant".
# Not to confuse with the "ldap" key: the "sso" key corresponds to wether or not a user is *automatically logged-in*
# on the app when logged-in on the YunoHost portal.
sso = "?"

# FIXME: replace with an **estimate** minimum disk and RAM requirements. e.g. 20M, 400M, 1G...
disk = "50M"
ram.build = "50M"
ram.runtime = "50M"

[antifeatures]
arbitrary-limitations.en = "The admin password is used to connect to the server. Username is your yunohost user."

[install]
    [install.domain]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "domain"

    [install.path]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "path"
    default = "/anki"

    # [install.language]
    # ask.en = "Choose the application language"
    # ask.fr = "Choisissez la langue de l'application"
    # type = "select"
    # choices = ["fr", "en"]
    # default = "fr"

    # [install.admin]
    # # this is a generic question - ask strings are automatically handled by YunoHost's core
    # type = "user"

    [install.common_password]
    ask.en = "Set the password to access anki server"
    help.en = "Be careful ! This will be the same for every user"
    type = "string"

[resources]
    # See the packaging documentation for the full set
    # of explanation regarding the behavior and properties for each of those

    [resources.sources]

        [resources.sources.main]
        # This will pre-fetch the asset which can then be deployed during the install/upgrade scripts with :
        #    ynh_setup_source --dest_dir="$install_dir"
        # You can also define other assets than "main" and add --source_id="foobar" in the previous command
        # url = "https://github.com/foo/bar/archive/refs/tags/v1.2.3.tar.gz"
        # sha256 = "0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef"

        # These infos are used by https://github.com/YunoHost/apps/blob/master/tools/autoupdate_app_sources/autoupdate_app_sources.py
        # to auto-update the previous asset urls and sha256sum + manifest version
        # assuming the upstream's code repo is on github and relies on tags or releases
        # See the 'sources' resource documentation for more details

        # autoupdate.strategy = "latest_github_tag"

    [resources.system_user]
    # This will provision/deprovision a unix system user

    [resources.install_dir]
    # This will create/remove the install dir as /var/www/$app
    # and store the corresponding setting $install_dir

    [resources.data_dir]
    # This will create/remove the data dir as /home/yunohost.app/$app
    # and store the corresponding setting $data_dir

    [resources.permissions]
    # This will configure SSOwat permission for $domain/$path/
    # The initial allowed group of user is configured via the init_main_permission question (public=visitors, private=all_users)
    main.url = "/"
    main.show_title = false
    main.allowed = "visitors"

    [resources.ports]
    # This will pick a random port for reverse-proxying and store it as the $port setting

    [resources.apt]
    # This will automatically install/uninstall the following apt packages
    packages = "python3-venv"